/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package co.unicauca.subscriber.deliveryproducts.presentation;

//import co.unicauca.microkernel.common.entities.Product;
import co.unicauca.microkernel.common.entities.Delivery;
import co.unicauca.subscriber.deliveryproducts.infra.ISubscriber;
import co.unicauca.subscriber.deliveryproducts.infra.RabbitListener;
import com.google.gson.Gson;
import javax.swing.DefaultListModel;
import java.util.Locale;

/**
 *
 * @author ahurtado
 */
public class DeliveryOffice extends javax.swing.JFrame implements ISubscriber {

    DefaultListModel modelList;
    /**
     * Creates new form DeliveryOffice
     */
    public DeliveryOffice() {
        initComponents();
        Runnable subscriber = new RabbitListener(this);
        modelList = new DefaultListModel();
        jList1.setModel(modelList);
        new Thread(subscriber).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Pedidos para entrega");
        getContentPane().add(jLabel1, java.awt.BorderLayout.PAGE_START);

        jScrollPane1.setViewportView(jList1);

        jPanel1.add(jScrollPane1);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeliveryOffice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeliveryOffice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeliveryOffice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeliveryOffice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeliveryOffice().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onMessage(String msg) {
      Gson gson = new Gson();
      Delivery delivery = gson.fromJson(msg, Delivery.class);
      modelList.addElement("Nombre Producto: " + delivery.getProduct().getName() + " Precio: " + delivery.getPrice() +
                            " Informacion de Envio: \n \t Direccion de destino: " + delivery.getAddress() + " Ciudad: " + delivery.getCity() +
                            " Pais: " + delivery.getCountryCode().toUpperCase(Locale.ROOT)  );
      jList1.paintImmediately(jList1.getBounds());
    }
}
